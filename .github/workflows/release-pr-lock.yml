name: Dependency Locking on Release

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - release

concurrency:
  group: lock-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  lock:
    name: Lock Dependencies
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Prepare the access token
        run: echo "TOKEN=${{ secrets.CI_TOKEN_ABOT }}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Remove the locked and verified labels if present
        uses: actions-ecosystem/action-remove-labels@v1
        continue-on-error: true
        with:
          github_token: ${{ env.TOKEN }}
          labels: |
            Locked
            Verified

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies (bun)
        run: bun install

      - name: Install dependencies (npm)
        run: npm install

      - name: Label PR as locked
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ env.TOKEN }}
          labels: Locked

      - name: Commit lockfile updates if needed
        run: |
          echo "Checking for lockfile updates..."
          [ -f package-lock.json ] && git add package-lock.json || true
          [ -f bun.lock ] && git add bun.lock || true
          [ -f bun.lockb ] && git add bun.lockb || true
          if ! git diff --cached --quiet; then
            echo "Committing lockfile updates..."
            git config user.name "the-agent-abot"
            git config user.email "the-agent-abot@users.noreply.github.com"
            git commit -m "Auto-lock: Update dependencies"
            git remote set-url origin https://x-access-token:${{ env.TOKEN }}@github.com/${{ github.repository }}.git
            git pull origin ${{ github.head_ref }} --rebase
            git push origin HEAD:${{ github.head_ref }}
            echo "Lockfile updates committed"
          else
            echo "No lockfile updates found"
          fi

      - name: Comment on PR to notify about locking
        env:
          GH_TOKEN: ${{ env.TOKEN }}
        run: |
          gh pr comment ${{ github.event.pull_request.number }} \
            --body "ðŸ”’ Auto-locked! Make sure to pull the latest changes before merging."

      - name: Remove locked label on failure or cancellation
        if: always() && (failure() || cancelled())
        uses: actions-ecosystem/action-remove-labels@v1
        continue-on-error: true
        with:
          github_token: ${{ env.TOKEN }}
          labels: Locked
